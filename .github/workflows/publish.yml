name: Publish to Cocoapods

# on:
#   repository_dispatch:
#     types:
#       - cocoapods-deploy
on: 
  push: 
    branches: [master]

permissions: write-all

jobs:
  publish:
    name: Download build files and publish to cocoapods
    runs-on: macos-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
        with:
            token: ${{ secrets.GITHUB_TOKEN }}

      # - name: Download and unzip artifacts
      #   run: |
      #     # Get the latest workflow run
      #     curl -s -H "Accept: application/vnd.github.v3+json" \
      #       -H "Authorization: Bearer ${{ secrets.PAT }}" \
      #       https://api.github.com/repos/aditya-likeminds/LikeMinds-iOS-Feed-SDK/actions/runs > run_info.json
      
      #     # Extract the run ID
      #     export RUN_ID=$(cat run_info.json | jq -r '.workflow_runs[0].id')
      
      #     # Get information about the artifacts in the latest run
      #     curl -s -H "Accept: application/vnd.github.v3+json" \
      #       -H "Authorization: Bearer ${{ secrets.PAT }}" \
      #       https://api.github.com/repos/aditya-likeminds/LikeMinds-iOS-Feed-SDK/actions/runs/${RUN_ID}/artifacts > artifact_info.json
      
      #     # Get the URL for the artifact archive
      #     export ARTIFACT_URL=$(cat artifact_info.json | jq -r '.artifacts[0].archive_download_url')
      
      #     # Download and extract the artifact
      #     curl -LJO -H "Accept: application/vnd.github.v3+json" \
      #       -H "Authorization: Bearer ${{ secrets.PAT }}" \
      #       $ARTIFACT_URL
      
      #     unzip -qo '*.zip'

      #     rm -f artifact_info.json run_info.json xcframework-build.zip

      - name: Push artifacts to master
        run: |
          # Configure Git
          git config --global user.name "$(git log -n 1 --pretty=format:%an)"
          git config --global user.email "$(git log -n 1 --pretty=format:%ae)"

          # Check if there are changes
          if [[ -n $(git status -s) ]]; then
            # Add, commit, and push changes
            git add LikeMindsFeed.podspec LikeMindsFeed.xcframework
            git commit -m "Update artifacts from GitHub Actions"
            git push origin master
          else
            echo "No changes to commit."
          fi
        env:
          PAT: ${{ secrets.PAT }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Git Tag and create release
        run: |
          # Push a Git tag with the new version
          export current_version=$(grep 'spec.version' LikeMindsFeed.podspec | awk -F '"' '/spec.version/{print $2}' | tr -d '\n' | sed 's/[^0-9.]//g; s/\..$//')
          
          # Check if the tag already exists
          if git rev-parse "$current_version" >/dev/null 2>&1; then
            echo "Tag $current_version already exists. Skipping tag and release creation."
          else
            git tag -a "$current_version" -m "Version $current_version"
            git push origin "$current_version"
            
            # Create github release
            gh release create "v$(git describe --tags --abbrev=0)" --generate-notes
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: cocoapods test
        run: pod spec lint --verbose
        env:
          COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}